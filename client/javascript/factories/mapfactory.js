cubeCrawler.factory('mapFactory',function ($http){
      var factory = {};
      var map = {};
      var items = {};
      factory.initMap = function(enemies, callback) {
		  	map = [
      			{0: ['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#']},
      			{1: ['|','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{2: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{3: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{4: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{5: ['#','.','.','.','.','@','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{6: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{7: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{8: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{9: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{10: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{11: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{12: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{13: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{14: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
      			{15: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
     			{16: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
     			{17: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
     			{18: ['#','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','#']},
     			{19: ['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#']}
      	];

        for (enemy in enemies) {
            var x = enemies[enemy]['x'];
            var y = enemies[enemy]['y'];
            map[y][y][x] = enemies[enemy].mapCharacter;
          } 

        for (item in items) {
          var x = items[item]['x'];
          var y = items[item]['y'];
          map[y][y][x] = items[item].mapCharacter;
        }

        callback(map);
      }//initMap

        factory.updatePlayerCoords = function(callback) {
        	callback(map);
        };

        factory.update = function(map,newx,newy,newchar, oldx,oldy,oldchar, callback) {
          map[newy][newy][newx] = oldchar;
          map[oldy][oldy][oldx] = newchar;
          callback(map);
        
      };

        factory.getMap = function(callback){
            callback(map);
          };
  
        factory.getItem = function(stat,callback) {
        $http.get('/items/'+stat+'/').success(function(output){
          item = output;
          callback(item);
        });
      } //getItem

  return factory;
});
		